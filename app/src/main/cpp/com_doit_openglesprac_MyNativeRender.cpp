/* DO NOT EDIT THIS FILE - it is machine generated */
#include "util/LogUtil.h"
#include <jni.h>
/* Header for class com_doit_openglesprac_MyNativeRender */

#define NATIVE_RENDER_CLASS_NAME "com/doit/openglesprac/MyNativeRender"
#define NATIVE_BG_RENDER_CLASS_NAME "com/doit/openglesprac/egl/NativeEglRender"

#ifndef _Included_com_doit_openglesprac_MyNativeRender
#define _Included_com_doit_openglesprac_MyNativeRender
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     com_doit_openglesprac_MyNativeRender
 * Method:    native_Init
 * Signature: ()V
 */
JNIEXPORT void JNICALL native_Init
        (JNIEnv *env, jobject obj) {
    //todo

}

/*
 * Class:     com_doit_openglesprac_MyNativeRender
 * Method:    native_UnInit
 * Signature: ()V
 */
JNIEXPORT void JNICALL native_UnInit
        (JNIEnv *env, jobject obj) {
    //todo

}

/*
 * Class:     com_doit_openglesprac_MyNativeRender
 * Method:    native_SetParamsInt
 * Signature: (III)V
 */
JNIEXPORT void JNICALL native_SetParamsInt
        (JNIEnv *env, jobject obj, jint v1, jint v2, jint v3) {

}

/*
 * Class:     com_doit_openglesprac_MyNativeRender
 * Method:    native_SetParamsFloat
 * Signature: (IFF)V
 */
JNIEXPORT void JNICALL native_SetParamsFloat
        (JNIEnv *env, jobject obj, jint v1, jfloat v2, jfloat v3) {

}

/*
 * Class:     com_doit_openglesprac_MyNativeRender
 * Method:    native_UpdateTransformMatrix
 * Signature: (FFFF)V
 */
JNIEXPORT void JNICALL native_UpdateTransformMatrix
        (JNIEnv *env, jobject obj, jfloat v1, jfloat v2, jfloat v3, jfloat v4) {

}

/*
 * Class:     com_doit_openglesprac_MyNativeRender
 * Method:    native_SetImageData
 * Signature: (III[B)V
 */
JNIEXPORT void JNICALL native_SetImageData
        (JNIEnv *env, jobject obj, jint v1, jint v2, jint v3, jbyteArray v4) {

}

/*
 * Class:     com_doit_openglesprac_MyNativeRender
 * Method:    native_SetImageDataWithIndex
 * Signature: (IIII[B)V
 */
JNIEXPORT void JNICALL native_SetImageDataWithIndex
        (JNIEnv *env, jobject obj, jint v1, jint v2, jint v3, jint v4, jbyteArray v5) {

}

/*
 * Class:     com_doit_openglesprac_MyNativeRender
 * Method:    native_SetAudioData
 * Signature: ([S)V
 */
JNIEXPORT void JNICALL native_SetAudioData
        (JNIEnv *env, jobject obj, jshortArray v1) {

}

/*
 * Class:     com_doit_openglesprac_MyNativeRender
 * Method:    native_OnSurfaceCreated
 * Signature: ()V
 */
JNIEXPORT void JNICALL native_OnSurfaceCreated
        (JNIEnv *env, jobject obj) {

}

/*
 * Class:     com_doit_openglesprac_MyNativeRender
 * Method:    native_OnSurfaceChanged
 * Signature: (II)V
 */
JNIEXPORT void JNICALL native_OnSurfaceChanged
        (JNIEnv *env, jobject obj, jint v1, jint v2) {

}

/*
 * Class:     com_doit_openglesprac_MyNativeRender
 * Method:    native_OnDrawFrame
 * Signature: ()V
 */
JNIEXPORT void JNICALL native_OnDrawFrame
        (JNIEnv *env, jobject obj) {

}

/*
 * Class:     com_doit_openglesprac_egl_NativeEglRender
 * Method:    native_EglRenderInit
 * Signature: ()V
 */
JNIEXPORT void JNICALL native_EglRenderInit
        (JNIEnv *env, jobject obj) {

}

/*
 * Class:     com_doit_openglesprac_egl_NativeEglRender
 * Method:    native_EglRenderSetImageData
 * Signature: ([BII)V
 */
JNIEXPORT void JNICALL native_EglRenderSetImageData
        (JNIEnv *env, jobject obj, jbyteArray v1, jint v2, jint v3) {

}

/*
 * Class:     com_doit_openglesprac_egl_NativeEglRender
 * Method:    native_EglRenderSetIntParams
 * Signature: (II)V
 */
JNIEXPORT void JNICALL native_EglRenderSetIntParams
        (JNIEnv *env, jobject obj, jint v1, jint v2) {

}

/*
 * Class:     com_doit_openglesprac_egl_NativeEglRender
 * Method:    native_EglRenderDraw
 * Signature: ()V
 */
JNIEXPORT void JNICALL native_EglRenderDraw
        (JNIEnv *env, jobject obj) {

}

/*
 * Class:     com_doit_openglesprac_egl_NativeEglRender
 * Method:    native_EglRenderUnInit
 * Signature: ()V
 */
JNIEXPORT void JNICALL native_EglRenderUnInit
        (JNIEnv *env, jobject obj) {

}

//JNIEXPORT void JNICALL natuve_BgRenderUnInit(JNIEnv *env, jobject instance)
//{
//    EGLRender::GetInstance()->UnInit();
//}

static JNINativeMethod g_RenderMethods[] = {
        {"native_Init",                  "()V",       (void *) (native_Init)},
        {"native_UnInit",                "()V",       (void *) (native_UnInit)},
        {"native_SetImageData",          "(III[B)V",  (void *) (native_SetImageData)},
        {"native_SetImageDataWithIndex", "(IIII[B)V", (void *) (native_SetImageDataWithIndex)},
        {"native_SetParamsInt",          "(III)V",    (void *) (native_SetParamsInt)},
        {"native_SetParamsFloat",        "(IFF)V",    (void *) (native_SetParamsFloat)},
        {"native_SetAudioData",          "([S)V",     (void *) (native_SetAudioData)},
        {"native_UpdateTransformMatrix", "(FFFF)V",   (void *) (native_UpdateTransformMatrix)},
        {"native_OnSurfaceCreated",      "()V",       (void *) (native_OnSurfaceCreated)},
        {"native_OnSurfaceChanged",      "(II)V",     (void *) (native_OnSurfaceChanged)},
        {"native_OnDrawFrame",           "()V",       (void *) (native_OnDrawFrame)},
};

static JNINativeMethod g_BgRenderMethods[] = {
        {"native_EglRenderInit",         "()V",     (void *) (native_EglRenderInit)},
        {"native_EglRenderSetImageData", "([BII)V", (void *) (native_EglRenderSetImageData)},
        {"native_EglRenderSetIntParams", "(II)V",   (void *) (native_EglRenderSetIntParams)},
        {"native_EglRenderDraw",         "()V",     (void *) (native_EglRenderDraw)}
//        {"native_EglRenderUnInit",       "()V",     (void *) (natuve_BgRenderUnInit)},
};


static int
RegisterNativeMethods(JNIEnv *env, const char *className, JNINativeMethod *methods, int methodNum) {

    LOGCATE("RegisterNativeMethods");
    jclass clazz = env->FindClass(className);
    if (clazz == NULL) {
        LOGCATE("RegisterNativeMethods fail. clazz == NULL");
        return JNI_FALSE;
    }

    if (env->RegisterNatives(clazz, methods, methodNum) < 0) {
        LOGCATE("RegisterNativeMethods fail");
        return JNI_FALSE;
    }
    return JNI_TRUE;
}

static void UnregisterNativeMethods(JNIEnv *env, const char *className) {
    LOGCATE("UnregisterNativeMethods");
    jclass clazz = env->FindClass(className);
    if (clazz == NULL) {
        LOGCATE("UnregisterNativeMethods fail. clazz == NULL");
        return;
    }
    if (env != NULL) {
        env->UnregisterNatives(clazz);
    }
}

/** 加载so库的时候，会自动调用这个方法*/
jint JNI_OnLoad(JavaVM *jvm, void *p){
    LOGCATE("===== JNI_OnLoad =====");
    jint jniRet = JNI_ERR;
    JNIEnv *env = NULL;
    if(jvm->GetEnv((void **)(&env),JNI_VERSION_1_6) != JNI_OK){
        return jniRet;
    }

    jint regRet = RegisterNativeMethods(env,
                                        NATIVE_RENDER_CLASS_NAME,
                                        g_RenderMethods,
                                        sizeof(g_RenderMethods)/
                                        sizeof(g_RenderMethods[0]));
    if(regRet != JNI_TRUE){
        return JNI_ERR;
    }
    regRet = RegisterNativeMethods(env, NATIVE_BG_RENDER_CLASS_NAME, g_BgRenderMethods,
                                   sizeof(g_BgRenderMethods) /
                                   sizeof(g_BgRenderMethods[0]));
    if(regRet != JNI_TRUE){
        return JNI_ERR;
    }

    if(regRet != JNI_TRUE){
        return JNI_ERR;
    }

    return JNI_VERSION_1_6;
}

void JNI_OnUnload(JavaVM *jvm,void *p){
    JNIEnv *env = NULL;
    if(jvm->GetEnv((void **)(&env),JNI_VERSION_1_6) != JNI_OK){
        return;
    }

    UnregisterNativeMethods(env,NATIVE_RENDER_CLASS_NAME);
    UnregisterNativeMethods(env,NATIVE_BG_RENDER_CLASS_NAME);
}


//static JNINative
#ifdef __cplusplus
}
#endif
#endif
